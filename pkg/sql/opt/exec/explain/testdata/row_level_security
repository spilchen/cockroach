# Setup
# ----------------------------------------------------------------------

exec-ddl
CREATE USER rls_accessor
----

exec-ddl
SET ROLE rls_accessor
----

exec-ddl
CREATE TABLE t1 (c1 int);
----

exec-ddl
CREATE TABLE t2 (c1 int);
----

# Ensure non-RLS enabled tables don't have any output
# ----------------------------------------------------------------------

explain-plan-rls
select * from t1,t2 where t1.c1 = t2.c1;
----

# Enable RLS on only one table (t1)
# ----------------------------------------------------------------------

exec-ddl
ALTER TABLE t1 ENABLE ROW LEVEL SECURITY
----

explain-plan-rls
explain select * from t1,t2 where t1.c1 = t2.c1;
----
----

• row-level security policies
│
└── • table: t1
      permissive: []
----
----

# Enable RLS on both tables (t1 and t2)
# ----------------------------------------------------------------------

exec-ddl
ALTER TABLE t2 ENABLE ROW LEVEL SECURITY
----

explain-plan-rls
explain select * from t1,t2 where t1.c1 = t2.c1;
----
----

• row-level security policies
│
├── • table: t1
│     permissive: []
│
└── • table: t2
      permissive: []
----
----

# Ensure admin shows that we are exempt from all policies
# ----------------------------------------------------------------------

exec-ddl
SET ROLE root
----

explain-plan-rls
explain select max(t1.c1) from t1,t2 where t1.c1 = t2.c1;
----
----

• row-level security policies
  exempt for admin member
----
----

exec-ddl
SET ROLE rls_accessor
----

# Add select policies to each table
# ----------------------------------------------------------------------

exec-ddl
CREATE POLICY "policy 1" ON t1 USING (true);
----

exec-ddl
CREATE POLICY t2_pol_1 on t2 FOR SELECT USING (true);
----

explain-plan-rls
explain select count(*) from t1,t2 where t1.c1 = t2.c1;
----
----

• row-level security policies
│
├── • table: t1
│     permissive: [policy 1]
│
└── • table: t2
      permissive: [t2_pol_1]
----
----

# Add mulitple policies on the same table
# ----------------------------------------------------------------------

exec-ddl
CREATE POLICY p2 on t1 USING (true);
----

exec-ddl
CREATE POLICY p3 on t1 USING (true);
----

exec-ddl
CREATE POLICY r1 on t1 AS RESTRICTIVE USING (true);
----

exec-ddl
CREATE POLICY r2 on t1 AS RESTRICTIVE USING (true);
----

# TODO(136742): We currently only support at most one permissive policy. Update
# this when we support multiple and restrictive policies.
explain-plan-rls
explain select * from t1
----
----

• row-level security policies
│
└── • table: t1
      permissive: [policy 1]
----
----
