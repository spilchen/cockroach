# Test that we are able to create a basic mixedversion test, and that
# the pretty printing functionality works as expected.

in-mixed-version name=(mixed-version 1)
----
ok

in-mixed-version name=(mixed-version 2)
----
ok

workload name=bank
----
ok

workload name=rand
----
ok

background-command name=(csv server)
----
ok

plan
----
Seed:               12345
Upgrades:           v23.2.4 → v24.1.1 → v24.2.2 → <current>
Deployment mode:    system-only
Plan:
├── install fixtures for version "v23.2.4" (1)
├── start cluster at version "v23.2.4" (2)
├── wait for system tenant on nodes :1-4 to reach cluster version '23.2' (3)
├── run startup hooks concurrently
│   ├── run "initialize bank workload", after 5s delay (4)
│   └── run "initialize rand workload", after 100ms delay (5)
├── start background hooks concurrently
│   ├── run "bank workload", after 0s delay (6)
│   ├── run "rand workload", after 30s delay (7)
│   └── run "csv server", after 500ms delay (8)
├── upgrade cluster from "v23.2.4" to "v24.1.1"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (9)
│   ├── upgrade nodes :1-4 from "v23.2.4" to "v24.1.1"
│   │   ├── restart node 2 with binary version v24.1.1 (10)
│   │   ├── restart node 4 with binary version v24.1.1 (11)
│   │   ├── run mixed-version hooks concurrently
│   │   │   ├── run "mixed-version 1", after 5s delay (12)
│   │   │   └── run "mixed-version 2", after 0s delay (13)
│   │   ├── restart node 1 with binary version v24.1.1 (14)
│   │   └── restart node 3 with binary version v24.1.1 (15)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (16)
│   ├── run "mixed-version 1" (17)
│   └── wait for system tenant on nodes :1-4 to reach cluster version '24.1' (18)
├── upgrade cluster from "v24.1.1" to "v24.2.2"
│   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (19)
│   ├── upgrade nodes :1-4 from "v24.1.1" to "v24.2.2"
│   │   ├── restart node 2 with binary version v24.2.2 (20)
│   │   ├── restart node 1 with binary version v24.2.2 (21)
│   │   ├── run mixed-version hooks concurrently
│   │   │   ├── run "mixed-version 1", after 0s delay (22)
│   │   │   └── run "mixed-version 2", after 5s delay (23)
│   │   ├── restart node 4 with binary version v24.2.2 (24)
│   │   └── restart node 3 with binary version v24.2.2 (25)
│   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (26)
│   ├── run mixed-version hooks concurrently
│   │   ├── run "mixed-version 1", after 0s delay (27)
│   │   └── run "mixed-version 2", after 30s delay (28)
│   └── wait for system tenant on nodes :1-4 to reach cluster version '24.2' (29)
└── upgrade cluster from "v24.2.2" to "<current>"
   ├── prevent auto-upgrades on system tenant by setting `preserve_downgrade_option` (30)
   ├── upgrade nodes :1-4 from "v24.2.2" to "<current>"
   │   ├── restart node 3 with binary version <current> (31)
   │   ├── restart node 4 with binary version <current> (32)
   │   ├── restart node 1 with binary version <current> (33)
   │   ├── run "mixed-version 1" (34)
   │   ├── restart node 2 with binary version <current> (35)
   │   └── run "mixed-version 2" (36)
   ├── downgrade nodes :1-4 from "<current>" to "v24.2.2"
   │   ├── restart node 2 with binary version v24.2.2 (37)
   │   ├── run "mixed-version 1" (38)
   │   ├── restart node 3 with binary version v24.2.2 (39)
   │   ├── restart node 4 with binary version v24.2.2 (40)
   │   ├── run "mixed-version 2" (41)
   │   └── restart node 1 with binary version v24.2.2 (42)
   ├── upgrade nodes :1-4 from "v24.2.2" to "<current>"
   │   ├── restart node 2 with binary version <current> (43)
   │   ├── restart node 3 with binary version <current> (44)
   │   ├── run mixed-version hooks concurrently
   │   │   ├── run "mixed-version 1", after 0s delay (45)
   │   │   └── run "mixed-version 2", after 5s delay (46)
   │   ├── restart node 1 with binary version <current> (47)
   │   └── restart node 4 with binary version <current> (48)
   ├── allow upgrade to happen on system tenant by resetting `preserve_downgrade_option` (49)
   ├── run "mixed-version 2" (50)
   └── wait for system tenant on nodes :1-4 to reach cluster version <current> (51)
